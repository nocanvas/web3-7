{"ast":null,"code":"var _jsxFileName = \"/Users/john/Documents/GitHub/test1/client/src/components/Web3Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Web3Data(props) {\n  _s();\n\n  const {\n    web3Context\n  } = props;\n  const {\n    networkId,\n    networkName,\n    accounts,\n    providerName,\n    lib\n  } = web3Context;\n  const [balance, setBalance] = useState(0);\n  const getBalance = useCallback(async () => {\n    let balance = accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n    setBalance(balance);\n  }, [accounts, lib.eth, lib.utils]);\n  useEffect(() => {\n    getBalance();\n  }, [accounts, getBalance, networkId]);\n\n  const requestAuth = async web3Context => {\n    try {\n      await web3Context.requestAuth();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const requestAccess = useCallback(web3Context => requestAuth(web3Context), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", props.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Network: \", networkId ? `${networkId} – ${networkName}` : 'No connection']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Your address: \", accounts && accounts.length ? accounts[0] : 'Unknown']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Your ETH balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Provider: \", providerName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 2\n    }, this), accounts && accounts.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Accounts & Signing Status: Access Granted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 2\n    }, this) : !!networkId && providerName !== 'infura' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestAccess,\n        children: \"Request Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 2\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Web3Data, \"W9XkxxXA0EDYQSyBOmG1Y8yak6Q=\");\n\n_c = Web3Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Web3Data\");","map":{"version":3,"sources":["/Users/john/Documents/GitHub/test1/client/src/components/Web3Data.js"],"names":["React","useState","useEffect","useCallback","Web3Data","props","web3Context","networkId","networkName","accounts","providerName","lib","balance","setBalance","getBalance","length","utils","fromWei","eth","requestAuth","e","console","error","requestAccess","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA;AAAlD,MAA0DL,WAAhE;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMa,UAAU,GAAGX,WAAW,CAAC,YAAY;AAC1C,QAAIS,OAAO,GAAGH,QAAQ,IAAIA,QAAQ,CAACM,MAAT,GAAkB,CAA9B,GAAkCJ,GAAG,CAACK,KAAJ,CAAUC,OAAV,CAAkB,MAAMN,GAAG,CAACO,GAAJ,CAAQJ,UAAR,CAAmBL,QAAQ,CAAC,CAAD,CAA3B,CAAxB,EAAyD,OAAzD,CAAlC,GAAsG,SAApH;AACAI,IAAAA,UAAU,CAACD,OAAD,CAAV;AACA,GAH6B,EAG3B,CAACH,QAAD,EAAWE,GAAG,CAACO,GAAf,EAAoBP,GAAG,CAACK,KAAxB,CAH2B,CAA9B;AAKAd,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,UAAU;AACT,GAFQ,EAEN,CAACL,QAAD,EAAWK,UAAX,EAAuBP,SAAvB,CAFM,CAAT;;AAIA,QAAMY,WAAW,GAAG,MAAMb,WAAN,IAAqB;AACxC,QAAI;AACH,YAAMA,WAAW,CAACa,WAAZ,EAAN;AACA,KAFD,CAEE,OAAOC,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA;AACD,GAND;;AAOA,QAAMG,aAAa,GAAGpB,WAAW,CAAEG,WAAD,IAAiBa,WAAW,CAACb,WAAD,CAA7B,EAA4C,EAA5C,CAAjC;AACA,sBACA;AAAA,4BACA;AAAA,sBAAMD,KAAK,CAACmB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEC;AAAA,8BACUjB,SAAS,GAAI,GAAEA,SAAU,MAAKC,WAAY,EAAjC,GAAqC,eADxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAA,mCACeC,QAAQ,IAAIA,QAAQ,CAACM,MAArB,GAA8BN,QAAQ,CAAC,CAAD,CAAtC,GAA4C,SAD3D;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAQC;AAAA,uCACmBG,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YARD,eAWC;AAAA,+BACWF,YADX;AAAA;AAAA;AAAA;AAAA;AAAA,YAXD,EAcED,QAAQ,IAAIA,QAAQ,CAACM,MAArB,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,GAIG,CAAC,CAACR,SAAF,IAAeG,YAAY,KAAK,QAAhC,gBACJ;AAAA,6BACA;AAAQ,QAAA,OAAO,EAAEa,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADI,gBAKJ;AAAA;AAAA;AAAA;AAAA,YAvBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BC;;GAjDuBnB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nexport default function Web3Data(props) {\nconst { web3Context } = props;\nconst { networkId, networkName, accounts, providerName, lib } = web3Context;\nconst [balance, setBalance] = useState(0);\nconst getBalance = useCallback(async () => {\n\tlet balance = accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n\tsetBalance(balance);\n}, [accounts, lib.eth, lib.utils]);\n\t\nuseEffect(() => {\ngetBalance();\n}, [accounts, getBalance, networkId]);\n\nconst requestAuth = async web3Context => {\n\ttry {\n\t\tawait web3Context.requestAuth();\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\nconst requestAccess = useCallback((web3Context) => requestAuth(web3Context), []);\nreturn (\n<div>\n<h3> {props.title} </h3>\n\t<div>\n\tNetwork: {networkId ? `${networkId} – ${networkName}` : 'No connection'}\n\t</div>\n\t<div>\n\tYour address: {accounts && accounts.length ? accounts[0] : 'Unknown'}\n\t</div>\n\t<div>\n\tYour ETH balance: {balance}\n\t</div>\n\t<div>\n\tProvider: {providerName}\n\t</div>\n\t{accounts && accounts.length ? (\n\t<div>\n\tAccounts & Signing Status: Access Granted\n\t</div>\n\t) : !!networkId && providerName !== 'infura' ? (\n\t<div>\n\t<button onClick={requestAccess}>Request Access</button>\n\t</div>\n\t) : (\n\t<div></div>\n\t)}\n</div>\n);\n}"]},"metadata":{},"sourceType":"module"}