{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst web3_1 = __importDefault(require(\"web3\"));\n\nfunction connection(conn) {\n  return new web3_1.default(conn).currentProvider;\n}\n\nexports.connection = connection;\n\nfunction tryInjected() {\n  // Detect whether the current browser is ethereum-compatible\n  if (window.ethereum === undefined) return undefined;\n  const provider = window.ethereum; // Disable auto refresh if possible\n\n  if (provider.autoRefreshOnNetworkChange === true) {\n    provider.autoRefreshOnNetworkChange = false;\n  }\n\n  return provider;\n}\n\nexports.tryInjected = tryInjected;\n\nfunction injected() {\n  const provider = tryInjected();\n  if (!provider) throw new Error('A web3 provider is not attached to a window.');\n  return provider;\n}\n\nexports.injected = injected;","map":{"version":3,"sources":["../../src/context/providers.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAUA,SAAgB,UAAhB,CAA2B,IAA3B,EAAuC;AACrC,SAAO,IAAI,MAAA,CAAA,OAAJ,CAAS,IAAT,EAAe,eAAtB;AACD;;AAFD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAIA,SAAgB,WAAhB,GAA2B;AACzB;AACA,MAAI,MAAM,CAAC,QAAP,KAAoB,SAAxB,EAAmC,OAAO,SAAP;AACnC,QAAM,QAAQ,GAAG,MAAM,CAAC,QAAxB,CAHyB,CAKzB;;AACA,MAAI,QAAQ,CAAC,0BAAT,KAAwC,IAA5C,EAAkD;AAChD,IAAA,QAAQ,CAAC,0BAAT,GAAsC,KAAtC;AACD;;AAED,SAAO,QAAP;AACD;;AAXD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAaA,SAAgB,QAAhB,GAAwB;AACtB,QAAM,QAAQ,GAAG,WAAW,EAA5B;AACA,MAAI,CAAC,QAAL,EAAe,MAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN;AACf,SAAO,QAAP;AACD;;AAJD,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst web3_1 = __importDefault(require(\"web3\"));\nfunction connection(conn) {\n    return new web3_1.default(conn).currentProvider;\n}\nexports.connection = connection;\nfunction tryInjected() {\n    // Detect whether the current browser is ethereum-compatible\n    if (window.ethereum === undefined)\n        return undefined;\n    const provider = window.ethereum;\n    // Disable auto refresh if possible\n    if (provider.autoRefreshOnNetworkChange === true) {\n        provider.autoRefreshOnNetworkChange = false;\n    }\n    return provider;\n}\nexports.tryInjected = tryInjected;\nfunction injected() {\n    const provider = tryInjected();\n    if (!provider)\n        throw new Error('A web3 provider is not attached to a window.');\n    return provider;\n}\nexports.injected = injected;\n//# sourceMappingURL=providers.js.map"]},"metadata":{},"sourceType":"script"}