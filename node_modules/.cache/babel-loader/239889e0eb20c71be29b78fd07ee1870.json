{"ast":null,"code":"var _classCallCheck = require(\"/Users/john/Documents/GitHub/web3-3/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/john/Documents/GitHub/web3-3/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar axios = require('axios');\n\nvar logreq = process.env.httpsendlog;\nvar logmaxlen = 120;\n\nvar HttpWrapper = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function HttpWrapper(opts) {\n    _classCallCheck(this, HttpWrapper);\n\n    this.provider = axios.create(Object.assign({\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }, opts));\n\n    if (logreq) {\n      this.provider.interceptors.response.use(function (response) {\n        console.log('got response:', response.config.url, JSON.stringify(response.data).slice(0, logmaxlen));\n        return response;\n      }, function (error) {\n        var errData = error.response ? error.response.data : {\n          error: error.message\n        };\n        var errStr = (typeof errData === 'string' ? errData : JSON.stringify(errData)).slice(0, logmaxlen);\n        var errUrl = error.response ? error.response.config.url : error.address;\n        console.log('got response:', errUrl, 'err=', errStr);\n        return Promise.reject(error);\n      });\n    }\n  }\n\n  _createClass(HttpWrapper, [{\n    key: \"send\",\n    value: function send(url, jsonRequestData, callback) {\n      this.sendPromise(url, jsonRequestData || {}).then(function (data) {\n        return callback(null, data);\n      }).catch(function (err) {\n        return callback(err, null);\n      });\n    }\n  }, {\n    key: \"sendPromise\",\n    value: function sendPromise(url, jsonRequestData) {\n      if (logreq) {\n        console.log('sending request:', url, JSON.stringify(jsonRequestData || {}).slice(0, logmaxlen));\n      }\n\n      return this.provider.post(url, jsonRequestData).then(function (res) {\n        return res.data;\n      }).catch(function (err) {\n        return Promise.reject(err.response ? err.response.data : {\n          error: err.message\n        });\n      });\n    }\n  }]);\n\n  return HttpWrapper;\n}();\n\nmodule.exports = HttpWrapper;","map":{"version":3,"sources":["/Users/john/Documents/GitHub/web3-3/node_modules/@openzeppelin/gsn-provider/src/tabookey-gasless/HttpWrapper.js"],"names":["axios","require","logreq","process","env","httpsendlog","logmaxlen","HttpWrapper","opts","provider","create","Object","assign","headers","interceptors","response","use","console","log","config","url","JSON","stringify","data","slice","error","errData","message","errStr","errUrl","address","Promise","reject","jsonRequestData","callback","sendPromise","then","catch","err","post","res","module","exports"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA3B;AACA,IAAMC,SAAS,GAAG,GAAlB;;IAEMC,W;;;AACJ,uBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,QAAL,GAAgBT,KAAK,CAACU,MAAN,CACdC,MAAM,CAACC,MAAP,CACE;AACEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADX,KADF,EAIEL,IAJF,CADc,CAAhB;;AASA,QAAIN,MAAJ,EAAY;AACV,WAAKO,QAAL,CAAcK,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CACE,UAASD,QAAT,EAAmB;AACjBE,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,QAAQ,CAACI,MAAT,CAAgBC,GAA7C,EAAkDC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACQ,IAAxB,EAA8BC,KAA9B,CAAoC,CAApC,EAAuClB,SAAvC,CAAlD;AACA,eAAOS,QAAP;AACD,OAJH,EAKE,UAASU,KAAT,EAAgB;AACd,YAAMC,OAAO,GAAGD,KAAK,CAACV,QAAN,GAAiBU,KAAK,CAACV,QAAN,CAAeQ,IAAhC,GAAuC;AAAEE,UAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,SAAvD;AACA,YAAMC,MAAM,GAAG,CAAC,OAAOF,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwCL,IAAI,CAACC,SAAL,CAAeI,OAAf,CAAzC,EAAkEF,KAAlE,CAAwE,CAAxE,EAA2ElB,SAA3E,CAAf;AACA,YAAMuB,MAAM,GAAGJ,KAAK,CAACV,QAAN,GAAiBU,KAAK,CAACV,QAAN,CAAeI,MAAf,CAAsBC,GAAvC,GAA6CK,KAAK,CAACK,OAAlE;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BW,MAA7B,EAAqC,MAArC,EAA6CD,MAA7C;AACA,eAAOG,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;AACD,OAXH;AAaD;AACF;;;;WAED,cAAKL,GAAL,EAAUa,eAAV,EAA2BC,QAA3B,EAAqC;AACnC,WAAKC,WAAL,CAAiBf,GAAjB,EAAsBa,eAAe,IAAI,EAAzC,EACGG,IADH,CACQ,UAAAb,IAAI;AAAA,eAAIW,QAAQ,CAAC,IAAD,EAAOX,IAAP,CAAZ;AAAA,OADZ,EAEGc,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIJ,QAAQ,CAACI,GAAD,EAAM,IAAN,CAAZ;AAAA,OAFZ;AAGD;;;WAED,qBAAYlB,GAAZ,EAAiBa,eAAjB,EAAkC;AAChC,UAAI/B,MAAJ,EAAY;AACVe,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,GAAhC,EAAqCC,IAAI,CAACC,SAAL,CAAeW,eAAe,IAAI,EAAlC,EAAsCT,KAAtC,CAA4C,CAA5C,EAA+ClB,SAA/C,CAArC;AACD;;AACD,aAAO,KAAKG,QAAL,CACJ8B,IADI,CACCnB,GADD,EACMa,eADN,EAEJG,IAFI,CAEC,UAAAI,GAAG;AAAA,eAAIA,GAAG,CAACjB,IAAR;AAAA,OAFJ,EAGJc,KAHI,CAGE,UAAAC,GAAG;AAAA,eAAIP,OAAO,CAACC,MAAR,CAAeM,GAAG,CAACvB,QAAJ,GAAeuB,GAAG,CAACvB,QAAJ,CAAaQ,IAA5B,GAAmC;AAAEE,UAAAA,KAAK,EAAEa,GAAG,CAACX;AAAb,SAAlD,CAAJ;AAAA,OAHL,CAAP;AAID;;;;;;AAGHc,MAAM,CAACC,OAAP,GAAiBnC,WAAjB","sourcesContent":["const axios = require('axios');\nconst logreq = process.env.httpsendlog;\nconst logmaxlen = 120;\n\nclass HttpWrapper {\n  constructor(opts) {\n    this.provider = axios.create(\n      Object.assign(\n        {\n          headers: { 'Content-Type': 'application/json' },\n        },\n        opts,\n      ),\n    );\n\n    if (logreq) {\n      this.provider.interceptors.response.use(\n        function(response) {\n          console.log('got response:', response.config.url, JSON.stringify(response.data).slice(0, logmaxlen));\n          return response;\n        },\n        function(error) {\n          const errData = error.response ? error.response.data : { error: error.message };\n          const errStr = (typeof errData === 'string' ? errData : JSON.stringify(errData)).slice(0, logmaxlen);\n          const errUrl = error.response ? error.response.config.url : error.address;\n          console.log('got response:', errUrl, 'err=', errStr);\n          return Promise.reject(error);\n        },\n      );\n    }\n  }\n\n  send(url, jsonRequestData, callback) {\n    this.sendPromise(url, jsonRequestData || {})\n      .then(data => callback(null, data))\n      .catch(err => callback(err, null));\n  }\n\n  sendPromise(url, jsonRequestData) {\n    if (logreq) {\n      console.log('sending request:', url, JSON.stringify(jsonRequestData || {}).slice(0, logmaxlen));\n    }\n    return this.provider\n      .post(url, jsonRequestData)\n      .then(res => res.data)\n      .catch(err => Promise.reject(err.response ? err.response.data : { error: err.message }));\n  }\n}\n\nmodule.exports = HttpWrapper;\n"]},"metadata":{},"sourceType":"script"}