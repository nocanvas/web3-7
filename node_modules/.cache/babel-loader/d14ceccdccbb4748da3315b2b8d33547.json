{"ast":null,"code":"var _jsxFileName = \"/Users/john/Documents/GitHub/test1/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useWeb3 } from '@openzeppelin/network/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infuraProjectId = '41155b0c91304dc6acce1fa42cf5c04f';\n\nfunction App() {\n  _s();\n\n  const web3Context = useWeb3(`wss://ropsten.infura.io/ws/v3/${infuraProjectId}`);\n  const {\n    networkId,\n    networkName,\n    providerName\n  } = web3Context;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Infura/MetaMask/OpenZeppelin Dapp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Network: \", networkId ? `${networkId} – ${networkName}` : 'No connection']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Provider: \", providerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"ornPnFY2k++255Hh2Gp9pxyOKZE=\", false, function () {\n  return [useWeb3];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/Documents/GitHub/test1/client/src/App.js"],"names":["React","useWeb3","infuraProjectId","App","web3Context","networkId","networkName","providerName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AACA,MAAMC,eAAe,GAAG,kCAAxB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAMC,WAAW,GAAGH,OAAO,CAAE,iCAAgCC,eAAgB,EAAlD,CAA3B;AACA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA;AAA1B,MAA2CH,WAAjD;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAA,gCACYC,SAAS,GAAI,GAAEA,SAAU,MAAKC,WAAY,EAAjC,GAAqC,eAD1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,iCACWC,YADX;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAaC;;GAhBQJ,G;UACWF,O;;;KADXE,G;AAiBT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useWeb3 } from '@openzeppelin/network/react';\nconst infuraProjectId = '41155b0c91304dc6acce1fa42cf5c04f';\nfunction App() {\nconst web3Context = useWeb3(`wss://ropsten.infura.io/ws/v3/${infuraProjectId}`);\nconst { networkId, networkName, providerName } = web3Context;\nreturn (\n<div className=\"App\">\n  <div>\n  <h1>Infura/MetaMask/OpenZeppelin Dapp</h1>\n    <div>\n      Network: {networkId ? `${networkId} – ${networkName}` : 'No connection'}\n    </div>\n    <div>\n    Provider: {providerName}\n    </div>\n  </div>\n</div>\n);\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}