{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/john/Documents/GitHub/web3-3/client/web3-7/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/john/Documents/GitHub/web3-3/client/web3-7/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sleep_1 = __importDefault(require(\"./sleep\"));\n\nfunction timeout(_x, _x2) {\n  return _timeout.apply(this, arguments);\n}\n\nfunction _timeout() {\n  _timeout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(target, ms) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Promise.race([target, _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return sleep_1.default(ms);\n\n                    case 2:\n                      throw new Error(\"Function has timed out with the limit of \".concat(ms, \" milliseconds.\"));\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))()]));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _timeout.apply(this, arguments);\n}\n\nexports.default = timeout;","map":{"version":3,"sources":["../../src/util/timeout.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;SAE8B,O;;;;;sEAAf,kBAA0B,MAA1B,EAA8C,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,8CACN,OAAO,CAAC,IAAR,CAAa,CAClB,MADkB,EAElB,yDAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACO,OAAA,CAAA,OAAA,CAAM,EAAN,CADP;;AAAA;AAAA,4BAGO,IAAI,KAAJ,oDAAsD,EAAtD,oBAHP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,IAFkB,CAAb,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAAf,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sleep_1 = __importDefault(require(\"./sleep\"));\nasync function timeout(target, ms) {\n    return Promise.race([\n        target,\n        (async () => {\n            await sleep_1.default(ms);\n            // TODO: Figure out how to print function name\n            throw new Error(`Function has timed out with the limit of ${ms} milliseconds.`);\n        })(),\n    ]);\n}\nexports.default = timeout;\n//# sourceMappingURL=timeout.js.map"]},"metadata":{},"sourceType":"script"}