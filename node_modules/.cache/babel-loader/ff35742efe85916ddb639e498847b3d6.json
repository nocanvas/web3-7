{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/john/Documents/GitHub/web3-3/client/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // TODO: Add React and React Hook linting rules\n\nvar react_1 = require(\"react\");\n\nvar providers = __importStar(require(\"../context/providers\"));\n\nvar Web3Context_1 = __importDefault(require(\"../context/Web3Context\"));\n\nvar forceUpdate_1 = __importDefault(require(\"../util/forceUpdate\"));\n\nfunction useWeb3Context(provider, options) {\n  // TODO: update the context when the options change\n  var _react_1$useState = react_1.useState(function () {\n    return new Web3Context_1.default(provider, options);\n  }),\n      _react_1$useState2 = _slicedToArray(_react_1$useState, 1),\n      context = _react_1$useState2[0];\n\n  var forceUpdate = forceUpdate_1.default();\n\n  function callForceUpdate() {\n    forceUpdate(42);\n  } // Causes components down the tree to re-render when any of the Web3Context properties change.\n\n\n  react_1.useEffect(function () {\n    context.on(Web3Context_1.default.NetworkIdChangedEventName, callForceUpdate);\n    context.on(Web3Context_1.default.AccountsChangedEventName, callForceUpdate);\n    context.on(Web3Context_1.default.ConnectionChangedEventName, callForceUpdate);\n    return function () {\n      context.off(Web3Context_1.default.NetworkIdChangedEventName, callForceUpdate);\n      context.off(Web3Context_1.default.AccountsChangedEventName, callForceUpdate);\n      context.off(Web3Context_1.default.ConnectionChangedEventName, callForceUpdate);\n    };\n  }, [context]);\n  react_1.useEffect(function () {\n    context.poll();\n    return function () {\n      context.stopPoll();\n    };\n  }, [context]);\n  return context;\n}\n\nexports.useWeb3Context = useWeb3Context;\n\nfunction useWeb3Injected(options) {\n  var _react_1$useState3 = react_1.useState(function () {\n    return providers.tryInjected();\n  }),\n      _react_1$useState4 = _slicedToArray(_react_1$useState3, 1),\n      provider = _react_1$useState4[0];\n\n  if (!provider) return undefined;\n  return useWeb3Context(provider, options);\n}\n\nexports.useWeb3Injected = useWeb3Injected;\n\nfunction useWeb3Network(connection, options) {\n  var _react_1$useState5 = react_1.useState(function () {\n    return providers.connection(connection);\n  }),\n      _react_1$useState6 = _slicedToArray(_react_1$useState5, 1),\n      provider = _react_1$useState6[0];\n\n  return useWeb3Context(provider, options);\n}\n\nexports.useWeb3Network = useWeb3Network;\n\nfunction useWeb3(fallbackConnection, options) {\n  var _react_1$useState7 = react_1.useState(function () {\n    try {\n      return providers.injected();\n    } catch (e) {\n      return providers.connection(fallbackConnection);\n    }\n  }),\n      _react_1$useState8 = _slicedToArray(_react_1$useState7, 1),\n      provider = _react_1$useState8[0];\n\n  return useWeb3Context(provider, options);\n}\n\nexports.useWeb3 = useWeb3;","map":{"version":3,"sources":["../../src/react/useWeb3Hook.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Add React and React Hook linting rules\nconst react_1 = require(\"react\");\nconst providers = __importStar(require(\"../context/providers\"));\nconst Web3Context_1 = __importDefault(require(\"../context/Web3Context\"));\nconst forceUpdate_1 = __importDefault(require(\"../util/forceUpdate\"));\nfunction useWeb3Context(provider, options) {\n    // TODO: update the context when the options change\n    const [context] = react_1.useState(() => new Web3Context_1.default(provider, options));\n    const forceUpdate = forceUpdate_1.default();\n    function callForceUpdate() {\n        forceUpdate(42);\n    }\n    // Causes components down the tree to re-render when any of the Web3Context properties change.\n    react_1.useEffect(() => {\n        context.on(Web3Context_1.default.NetworkIdChangedEventName, callForceUpdate);\n        context.on(Web3Context_1.default.AccountsChangedEventName, callForceUpdate);\n        context.on(Web3Context_1.default.ConnectionChangedEventName, callForceUpdate);\n        return () => {\n            context.off(Web3Context_1.default.NetworkIdChangedEventName, callForceUpdate);\n            context.off(Web3Context_1.default.AccountsChangedEventName, callForceUpdate);\n            context.off(Web3Context_1.default.ConnectionChangedEventName, callForceUpdate);\n        };\n    }, [context]);\n    react_1.useEffect(() => {\n        context.poll();\n        return () => {\n            context.stopPoll();\n        };\n    }, [context]);\n    return context;\n}\nexports.useWeb3Context = useWeb3Context;\nfunction useWeb3Injected(options) {\n    const [provider] = react_1.useState(() => providers.tryInjected());\n    if (!provider)\n        return undefined;\n    return useWeb3Context(provider, options);\n}\nexports.useWeb3Injected = useWeb3Injected;\nfunction useWeb3Network(connection, options) {\n    const [provider] = react_1.useState(() => providers.connection(connection));\n    return useWeb3Context(provider, options);\n}\nexports.useWeb3Network = useWeb3Network;\nfunction useWeb3(fallbackConnection, options) {\n    const [provider] = react_1.useState(() => {\n        try {\n            return providers.injected();\n        }\n        catch (e) {\n            return providers.connection(fallbackConnection);\n        }\n    });\n    return useWeb3Context(provider, options);\n}\nexports.useWeb3 = useWeb3;\n//# sourceMappingURL=useWeb3Hook.js.map"]},"metadata":{},"sourceType":"script"}