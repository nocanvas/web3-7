{"ast":null,"code":"const ethUtils = require('ethereumjs-util');\n\nconst BN = require('bignumber.js');\n\nconst {\n  toBN,\n  soliditySha3\n} = require('web3-utils');\n\nconst relayHubAbi = require('./tabookey-gasless/IRelayHub');\n\nconst relayRecipientAbi = require('./tabookey-gasless/IRelayRecipient');\n\nconst abiDecoder = require('abi-decoder');\n\nabiDecoder.addABI(relayHubAbi);\n\nfunction appendAddress(data, address) {\n  return data + ethUtils.setLengthLeft(ethUtils.toBuffer(address), 32).toString('hex');\n}\n\nfunction callAsJsonRpc(fn, args, id, callback, mapResponseFn = x => ({\n  result: x\n})) {\n  const response = {\n    jsonrpc: '2.0',\n    id\n  };\n\n  try {\n    fn(...args).then(result => {\n      callback(null, { ...response,\n        ...mapResponseFn(result)\n      });\n    }).catch(err => {\n      callback({ ...response,\n        error: err.toString()\n      }, null);\n    });\n  } catch (err) {\n    callback({ ...response,\n      error: err.toString()\n    });\n  }\n}\n\nfunction toInt(value) {\n  return new BN(value).toNumber();\n}\n\nfunction preconditionCodeToDescription(code) {\n  switch (parseInt(code)) {\n    case 1:\n      return 'wrong signature';\n\n    case 2:\n      return 'wrong nonce';\n\n    case 3:\n      return 'recipient reverted in acceptRelayedCall';\n\n    case 4:\n      return 'invalid status code returned by the recipient';\n\n    default:\n      return `error ${code}`;\n  }\n}\n\nfunction fixTransactionReceiptResponse(resp, debug = false) {\n  if (!resp || !resp.result || !resp.result.logs) return resp;\n  const logs = abiDecoder.decodeLogs(resp.result.logs);\n  const canRelayFailed = logs.find(e => e && e.name == 'CanRelayFailed');\n  const transactionRelayed = logs.find(e => e && e.name == 'TransactionRelayed');\n\n  const setErrorStatus = reason => {\n    if (debug) console.log(`Setting tx receipt status to zero while fetching tx receipt (${reason})`);\n    resp.result.status = 0;\n  };\n\n  if (canRelayFailed) {\n    setErrorStatus(`canRelay failed with ${canRelayFailed.events.find(e => e.name == 'reason').value}`);\n  } else if (transactionRelayed) {\n    const status = transactionRelayed.events.find(e => e.name == 'status').value;\n\n    if (parseInt(status) !== 0) {\n      // 0 signifies success\n      setErrorStatus(`reverted relayed transaction with status code ${status}`);\n    }\n  }\n\n  return resp;\n}\n\nasync function getApprovalData(approveFunction, options) {\n  try {\n    if (typeof approveFunction === 'function') {\n      return await approveFunction(options);\n    } else {\n      return '0x';\n    }\n  } catch (err) {\n    throw new Error(`Error running approveFunction for transaction: ${err.message || err}`);\n  }\n}\n\nfunction fixSignature(signature) {\n  // in geth its always 27/28, in ganache its 0/1. Change to 27/28 to prevent\n  // signature malleability if version is 0/1\n  // see https://github.com/ethereum/go-ethereum/blob/v1.8.23/internal/ethapi/api.go#L465\n  let v = parseInt(signature.slice(130, 132), 16);\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  const vHex = v.toString(16);\n  return signature.slice(0, 130) + vHex;\n}\n\nfunction makeApproveFunction(signFn, verbose) {\n  return async function (data) {\n    const signature = fixSignature(await signFn(soliditySha3({\n      type: 'address',\n      value: data.relayerAddress\n    }, {\n      type: 'address',\n      value: data.from\n    }, {\n      type: 'bytes',\n      value: data.encodedFunctionCall\n    }, {\n      type: 'uint256',\n      value: toBN(data.txFee)\n    }, {\n      type: 'uint256',\n      value: toBN(data.gasPrice)\n    }, {\n      type: 'uint256',\n      value: toBN(data.gas)\n    }, {\n      type: 'uint256',\n      value: toBN(data.nonce)\n    }, {\n      type: 'address',\n      value: data.relayHubAddress\n    }, {\n      type: 'address',\n      value: data.to\n    })));\n    if (verbose) console.log(`Signature for GSN transaction is ${signature}`);\n    return signature;\n  };\n}\n\nasync function createRelayHubFromRecipient(web3, recipientAddress) {\n  const relayRecipient = createRelayRecipient(web3, recipientAddress);\n  let relayHubAddress;\n\n  try {\n    relayHubAddress = await relayRecipient.methods.getHubAddr().call();\n  } catch (err) {\n    throw new Error(`Could not get relay hub address from recipient at ${recipientAddress} (${err.message}). Make sure it is a valid recipient contract.`);\n  }\n\n  if (!relayHubAddress || ethUtils.isZeroAddress(relayHubAddress)) {\n    throw new Error(`The relay hub address is set to zero in recipient at ${recipientAddress}. Make sure it is a valid recipient contract.`);\n  }\n\n  const code = await web3.eth.getCode(relayHubAddress);\n\n  if (code.length <= 2) {\n    throw new Error(`Relay hub is not deployed at address ${relayHubAddress}`);\n  }\n\n  const relayHub = createRelayHub(web3, relayHubAddress);\n  let hubVersion;\n\n  try {\n    hubVersion = await relayHub.methods.version().call();\n  } catch (err) {\n    throw new Error(`Could not query relay hub version at ${relayHubAddress} (${err.message}). Make sure the address corresponds to a relay hub.`);\n  }\n\n  if (!hubVersion.startsWith('1')) {\n    throw new Error(`Unsupported relay hub version '${hubVersion}'.`);\n  }\n\n  return relayHub;\n}\n\nfunction createRelayRecipient(web3, addr) {\n  return new web3.eth.Contract(relayRecipientAbi, addr);\n}\n\nfunction createRelayHub(web3, addr) {\n  return new web3.eth.Contract(relayHubAbi, addr);\n}\n\nasync function isRelayHubDeployedForRecipient(web3, recipientAddr) {\n  try {\n    await createRelayHubFromRecipient(web3, recipientAddr);\n    return true;\n  } catch (_err) {\n    return false;\n  }\n}\n\nasync function getRecipientFunds(web3, recipientAddr) {\n  const relayHub = await createRelayHubFromRecipient(web3, recipientAddr);\n  return await relayHub.methods.balanceOf(recipientAddr).call();\n} // Gtxdatazero 4 Paid for every zero byte of data or code for a transaction.\n// Gtxdatanonzero 68 Paid for every non-zero byte of data or code for a transaction\n// From yellow paper https://gavwood.com/paper.pdf\n// May change soon (EIP 2028: Transaction data gas cost reduction) https://eips.ethereum.org/EIPS/eip-2028\n\n\nfunction getCallDataGas(data) {\n  if (typeof data !== 'string') throw new Error('Data has to be a string');\n  if (data.startsWith('0x')) data = data.slice(2);\n  let gasCost = 0;\n\n  for (let i = 0; i < data.length; i += 2) {\n    if (data.substr(i, 2) === '00') {\n      gasCost += 4;\n    } else {\n      gasCost += 68;\n    }\n  }\n\n  return gasCost;\n}\n\nmodule.exports = {\n  appendAddress,\n  callAsJsonRpc,\n  toInt,\n  preconditionCodeToDescription,\n  fixTransactionReceiptResponse,\n  getApprovalData,\n  fixSignature,\n  makeApproveFunction,\n  createRelayHubFromRecipient,\n  isRelayHubDeployedForRecipient,\n  getRecipientFunds,\n  getCallDataGas,\n  createRelayHub\n};","map":{"version":3,"sources":["/Users/john/Documents/GitHub/web3-3/node_modules/@openzeppelin/gsn-provider/src/utils.js"],"names":["ethUtils","require","BN","toBN","soliditySha3","relayHubAbi","relayRecipientAbi","abiDecoder","addABI","appendAddress","data","address","setLengthLeft","toBuffer","toString","callAsJsonRpc","fn","args","id","callback","mapResponseFn","x","result","response","jsonrpc","then","catch","err","error","toInt","value","toNumber","preconditionCodeToDescription","code","parseInt","fixTransactionReceiptResponse","resp","debug","logs","decodeLogs","canRelayFailed","find","e","name","transactionRelayed","setErrorStatus","reason","console","log","status","events","getApprovalData","approveFunction","options","Error","message","fixSignature","signature","v","slice","vHex","makeApproveFunction","signFn","verbose","type","relayerAddress","from","encodedFunctionCall","txFee","gasPrice","gas","nonce","relayHubAddress","to","createRelayHubFromRecipient","web3","recipientAddress","relayRecipient","createRelayRecipient","methods","getHubAddr","call","isZeroAddress","eth","getCode","length","relayHub","createRelayHub","hubVersion","version","startsWith","addr","Contract","isRelayHubDeployedForRecipient","recipientAddr","_err","getRecipientFunds","balanceOf","getCallDataGas","gasCost","i","substr","module","exports"],"mappings":"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","sourcesContent":["const ethUtils = require('ethereumjs-util');\nconst BN = require('bignumber.js');\nconst { toBN, soliditySha3 } = require('web3-utils');\n\nconst relayHubAbi = require('./tabookey-gasless/IRelayHub');\nconst relayRecipientAbi = require('./tabookey-gasless/IRelayRecipient');\n\nconst abiDecoder = require('abi-decoder');\nabiDecoder.addABI(relayHubAbi);\n\nfunction appendAddress(data, address) {\n  return data + ethUtils.setLengthLeft(ethUtils.toBuffer(address), 32).toString('hex');\n}\n\nfunction callAsJsonRpc(fn, args, id, callback, mapResponseFn = x => ({ result: x })) {\n  const response = { jsonrpc: '2.0', id };\n  try {\n    fn(...args)\n      .then(result => {\n        callback(null, { ...response, ...mapResponseFn(result) });\n      })\n      .catch(err => {\n        callback({ ...response, error: err.toString() }, null);\n      });\n  } catch (err) {\n    callback({ ...response, error: err.toString() });\n  }\n}\n\nfunction toInt(value) {\n  return new BN(value).toNumber();\n}\n\nfunction preconditionCodeToDescription(code) {\n  switch (parseInt(code)) {\n    case 1:\n      return 'wrong signature';\n    case 2:\n      return 'wrong nonce';\n    case 3:\n      return 'recipient reverted in acceptRelayedCall';\n    case 4:\n      return 'invalid status code returned by the recipient';\n    default:\n      return `error ${code}`;\n  }\n}\n\nfunction fixTransactionReceiptResponse(resp, debug = false) {\n  if (!resp || !resp.result || !resp.result.logs) return resp;\n\n  const logs = abiDecoder.decodeLogs(resp.result.logs);\n  const canRelayFailed = logs.find(e => e && e.name == 'CanRelayFailed');\n  const transactionRelayed = logs.find(e => e && e.name == 'TransactionRelayed');\n\n  const setErrorStatus = reason => {\n    if (debug) console.log(`Setting tx receipt status to zero while fetching tx receipt (${reason})`);\n    resp.result.status = 0;\n  };\n\n  if (canRelayFailed) {\n    setErrorStatus(`canRelay failed with ${canRelayFailed.events.find(e => e.name == 'reason').value}`);\n  } else if (transactionRelayed) {\n    const status = transactionRelayed.events.find(e => e.name == 'status').value;\n    if (parseInt(status) !== 0) {\n      // 0 signifies success\n      setErrorStatus(`reverted relayed transaction with status code ${status}`);\n    }\n  }\n\n  return resp;\n}\n\nasync function getApprovalData(approveFunction, options) {\n  try {\n    if (typeof approveFunction === 'function') {\n      return await approveFunction(options);\n    } else {\n      return '0x';\n    }\n  } catch (err) {\n    throw new Error(`Error running approveFunction for transaction: ${err.message || err}`);\n  }\n}\n\nfunction fixSignature(signature) {\n  // in geth its always 27/28, in ganache its 0/1. Change to 27/28 to prevent\n  // signature malleability if version is 0/1\n  // see https://github.com/ethereum/go-ethereum/blob/v1.8.23/internal/ethapi/api.go#L465\n  let v = parseInt(signature.slice(130, 132), 16);\n  if (v < 27) {\n    v += 27;\n  }\n  const vHex = v.toString(16);\n  return signature.slice(0, 130) + vHex;\n}\n\nfunction makeApproveFunction(signFn, verbose) {\n  return async function(data) {\n    const signature = fixSignature(\n      await signFn(\n        soliditySha3(\n          { type: 'address', value: data.relayerAddress },\n          { type: 'address', value: data.from },\n          { type: 'bytes', value: data.encodedFunctionCall },\n          { type: 'uint256', value: toBN(data.txFee) },\n          { type: 'uint256', value: toBN(data.gasPrice) },\n          { type: 'uint256', value: toBN(data.gas) },\n          { type: 'uint256', value: toBN(data.nonce) },\n          { type: 'address', value: data.relayHubAddress },\n          { type: 'address', value: data.to },\n        ),\n      ),\n    );\n    if (verbose) console.log(`Signature for GSN transaction is ${signature}`);\n    return signature;\n  };\n}\n\nasync function createRelayHubFromRecipient(web3, recipientAddress) {\n  const relayRecipient = createRelayRecipient(web3, recipientAddress);\n  let relayHubAddress;\n  try {\n    relayHubAddress = await relayRecipient.methods.getHubAddr().call();\n  } catch (err) {\n    throw new Error(\n      `Could not get relay hub address from recipient at ${recipientAddress} (${err.message}). Make sure it is a valid recipient contract.`,\n    );\n  }\n\n  if (!relayHubAddress || ethUtils.isZeroAddress(relayHubAddress)) {\n    throw new Error(\n      `The relay hub address is set to zero in recipient at ${recipientAddress}. Make sure it is a valid recipient contract.`,\n    );\n  }\n\n  const code = await web3.eth.getCode(relayHubAddress);\n  if (code.length <= 2) {\n    throw new Error(`Relay hub is not deployed at address ${relayHubAddress}`);\n  }\n\n  const relayHub = createRelayHub(web3, relayHubAddress);\n  let hubVersion;\n  try {\n    hubVersion = await relayHub.methods.version().call();\n  } catch (err) {\n    throw new Error(\n      `Could not query relay hub version at ${relayHubAddress} (${err.message}). Make sure the address corresponds to a relay hub.`,\n    );\n  }\n\n  if (!hubVersion.startsWith('1')) {\n    throw new Error(`Unsupported relay hub version '${hubVersion}'.`);\n  }\n\n  return relayHub;\n}\n\nfunction createRelayRecipient(web3, addr) {\n  return new web3.eth.Contract(relayRecipientAbi, addr);\n}\n\nfunction createRelayHub(web3, addr) {\n  return new web3.eth.Contract(relayHubAbi, addr);\n}\n\nasync function isRelayHubDeployedForRecipient(web3, recipientAddr) {\n  try {\n    await createRelayHubFromRecipient(web3, recipientAddr);\n    return true;\n  } catch (_err) {\n    return false;\n  }\n}\n\nasync function getRecipientFunds(web3, recipientAddr) {\n  const relayHub = await createRelayHubFromRecipient(web3, recipientAddr);\n  return await relayHub.methods.balanceOf(recipientAddr).call();\n}\n\n// Gtxdatazero 4 Paid for every zero byte of data or code for a transaction.\n// Gtxdatanonzero 68 Paid for every non-zero byte of data or code for a transaction\n// From yellow paper https://gavwood.com/paper.pdf\n// May change soon (EIP 2028: Transaction data gas cost reduction) https://eips.ethereum.org/EIPS/eip-2028\nfunction getCallDataGas(data) {\n  if (typeof data !== 'string') throw new Error('Data has to be a string');\n  if (data.startsWith('0x')) data = data.slice(2);\n  let gasCost = 0;\n  for (let i = 0; i < data.length; i += 2) {\n    if (data.substr(i, 2) === '00') {\n      gasCost += 4;\n    } else {\n      gasCost += 68;\n    }\n  }\n  return gasCost;\n}\n\nmodule.exports = {\n  appendAddress,\n  callAsJsonRpc,\n  toInt,\n  preconditionCodeToDescription,\n  fixTransactionReceiptResponse,\n  getApprovalData,\n  fixSignature,\n  makeApproveFunction,\n  createRelayHubFromRecipient,\n  isRelayHubDeployedForRecipient,\n  getRecipientFunds,\n  getCallDataGas,\n  createRelayHub\n};\n"]},"metadata":{},"sourceType":"script"}