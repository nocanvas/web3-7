{"version":3,"sources":["components/Web3Data.js","App.js","reportWebVitals.js","index.js"],"names":["Web3Data","props","web3Context","networkId","networkName","accounts","providerName","lib","useState","balance","setBalance","getBalance","useCallback","a","length","utils","eth","fromWei","useEffect","requestAuth","console","error","requestAccess","title","onClick","App","useWeb3","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8qBACe,SAASA,EAASC,GAAQ,IACjCC,EAAgBD,EAAhBC,YACAC,EAAwDD,EAAxDC,UAAWC,EAA6CF,EAA7CE,YAAaC,EAAgCH,EAAhCG,SAAUC,EAAsBJ,EAAtBI,aAAcC,EAAQL,EAARK,IAFhB,EAGVC,mBAAS,GAHC,mBAGjCC,EAHiC,KAGxBC,EAHwB,KAIlCC,EAAaC,sBAAW,sBAAC,4BAAAC,EAAA,2DAChBR,GAAYA,EAASS,OAAS,GADd,4BACkBP,EAAIQ,MADtB,SAC0CR,EAAIS,IAAIL,WAAWN,EAAS,IADtE,6BAC4BY,QAD5B,eAC2E,SAD3E,2BACsF,UADtF,OAC1BR,EAD0B,KAE9BC,EAAWD,GAFmB,4CAG5B,CAACJ,EAAUE,EAAIS,IAAKT,EAAIQ,QAE3BG,qBAAU,WACVP,MACG,CAACN,EAAUM,EAAYR,IAE1B,IAAMgB,EAAW,uCAAG,WAAMjB,GAAN,SAAAW,EAAA,+EAEZX,EAAYiB,cAFA,sDAIlBC,QAAQC,MAAR,MAJkB,wDAAH,sDAOXC,EAAgBV,uBAAY,SAACV,GAAD,OAAiBiB,EAAYjB,KAAc,IAC7E,OACA,gCACA,mCAAMD,EAAMsB,MAAZ,OACC,4CACUpB,EAAS,UAAMA,EAAN,mBAAqBC,GAAgB,mBAExD,iDACeC,GAAYA,EAASS,OAAST,EAAS,GAAK,aAE3D,qDACmBI,KAEnB,6CACWH,KAEVD,GAAYA,EAASS,OACtB,4EAGMX,GAA8B,WAAjBG,EACnB,8BACA,wBAAQkB,QAASF,EAAjB,8BAGA,2B,aC5BcG,MAXf,WACA,IAAMvB,EAAcwB,kBAAQ,iCAAD,OAFH,qCAGxB,OACA,qBAAKC,UAAU,MAAf,SACE,gCACA,oEACA,cAAC3B,EAAD,CAAUuB,MAAM,YAAYrB,YAAaA,UCD5B0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a1ded9b6.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nexport default function Web3Data(props) {\nconst { web3Context } = props;\nconst { networkId, networkName, accounts, providerName, lib } = web3Context;\nconst [balance, setBalance] = useState(0);\nconst getBalance = useCallback(async () => {\n\tlet balance = accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n\tsetBalance(balance);\n}, [accounts, lib.eth, lib.utils]);\n\t\nuseEffect(() => {\ngetBalance();\n}, [accounts, getBalance, networkId]);\n\nconst requestAuth = async web3Context => {\n\ttry {\n\t\tawait web3Context.requestAuth();\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\nconst requestAccess = useCallback((web3Context) => requestAuth(web3Context), []);\nreturn (\n<div>\n<h3> {props.title} </h3>\n\t<div>\n\tNetwork: {networkId ? `${networkId} â€“ ${networkName}` : 'No connection'}\n\t</div>\n\t<div>\n\tYour address: {accounts && accounts.length ? accounts[0] : 'Unknown'}\n\t</div>\n\t<div>\n\tYour ETH balance: {balance}\n\t</div>\n\t<div>\n\tProvider: {providerName}\n\t</div>\n\t{accounts && accounts.length ? (\n\t<div>\n\tAccounts & Signing Status: Access Granted\n\t</div>\n\t) : !!networkId && providerName !== 'infura' ? (\n\t<div>\n\t<button onClick={requestAccess}>Request Access</button>\n\t</div>\n\t) : (\n\t<div></div>\n\t)}\n</div>\n);\n}","import React from 'react';\nimport './App.css';\nimport Web3Data from './components/Web3Data.js';\n\n\nimport { useWeb3 } from '@openzeppelin/network/react';\nconst infuraProjectId = '41155b0c91304dc6acce1fa42cf5c04f';\nfunction App() {\nconst web3Context = useWeb3(`wss://mainnet.infura.io/ws/v3/${infuraProjectId}`);\nreturn (\n<div className=\"App\">\n  <div>\n  <h1>Infura React Dapp with Components!</h1>\n  <Web3Data title=\"Web3 Data\" web3Context={web3Context} />\n  </div>\n</div>\n);\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}